#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e
set -o pipefail

# Parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=$(cd "$(dirname "$0")"; cd ..; pwd)
LIB_DIR=$BUILDPACK_DIR/lib
. $LIB_DIR/common.sh

APM_AGENT_URL="https://downloads.raygun.com/APM/latest/RaygunAgent-netcore-linux.zip"

# Load https://github.com/heroku/buildpack-stdlib
source <(curl --retry 3 -fsSL $BUILDPACK_STDLIB_URL)

# Setup apt environment
APT_DIR="$BUILD_DIR/.apt"
APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

# Create build and run environment
mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"
mkdir -p "$APT_DIR"

# Install dependencies
puts_step "Updating apt caches for dependencies"
apt-get $APT_OPTIONS update

puts_step "Installing dependencies"
DEPS="unzip net-tools"
apt-get $APT_OPTIONS -y --allow-downgrades --allow-remove-essential --allow-change-held-packages -d install --reinstall --no-install-recommends $DEPS
IFS=" " read -a DEP_PKGS <<< "$DEPS"
for DEP in ${DEP_PKGS[@]}; do
  echo "Installing $DEP"
  ls -t "$APT_CACHE_DIR"/archives/"$DEP"\_*.deb | head -1 | xargs -i dpkg -x '{}' "$APT_DIR"
done

puts_step "Downloading APM Agent"
SHARE_DIR="$BUILD_DIR/share/Raygun"
mkdir -p "$SHARE_DIR"
APM_DIR="$APT_DIR/opt/raygun-apm"
mkdir -p "$APM_DIR"
source <(curl --retry 3 -fsSL -O $APM_AGENT_URL)
unzip -d $APM_DIR/agent -o RaygunAgent-netcore-linux.zip
rm RaygunAgent-netcore-linux.zip
chmod +x $APM_DIR/agent/RaygunAgent
chmod +x $APM_DIR/agent/rgc

# Install the runner
puts_step "Installing APM Agent Runner Script"
mkdir -p "$BUILD_DIR/.profile.d"
cp "$BUILDPACK_DIR/extra/apm_agent.sh" "$BUILD_DIR/.profile.d/"
chmod +x "$BUILD_DIR/.profile.d/apm_agent.sh"

# Install the debug wrapper
puts_step "Installing rgc wrapper"
mkdir -p "$APM_DIR/bin/agent"
cp "$BUILDPACK_DIR/extra/rgc" "$APM_DIR/bin/agent/"
chmod +x "$APM_DIR/bin/agent/rgc"